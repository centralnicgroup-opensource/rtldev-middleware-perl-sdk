name: Release
on:
  # will run for every branch, except tags. See RSRMID-206.
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - "**"
    # Sequence of patterns matched against refs/tags
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - "**"
    tags-ignore:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    name: "perl ${{ matrix.perl-version }}"
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.actor != 'dependabot[bot]')
    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - "5.30"
          - "latest"

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v3
      - name: APT Packages
        run: apt install -y perl-doc ctags perltidy
      - name: install perl dependencies
        run: cpm install -g --no-test --show-build-log-on-failure --cpanfile cpanfile
      - run: |
          ./scripts/coverage.sh
          ./scripts/perltidy.sh
  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs:
      - test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    container:
      image: perldocker/perl-tester:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup NodeJS LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true
      - name: APT Packages
        run: apt install -y perl-doc ctags perltidy lsb-release
      - name: SW Versions
        run: |
          lsb_release -a
          node -v
          npm -v
          perl -V
      - name: install perl dependencies
        run: |
          cpm install -g --no-test --show-build-log-on-failure --cpanfile cpanfile
          perl Makefile.PL
          make
      - name: Install dependencies
        run: npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CPAN_USER: ${{ secrets.CPAN_USER }}
          CPAN_PASSWORD: ${{ secrets.CPAN_PASSWORD }}
        # we are root as of perl-tester image, npx won't invoke with root rights
        run: ./node_modules/.bin/semantic-release
